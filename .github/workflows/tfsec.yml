name: mono_terraform
on: pull_request
jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.11
      - name: Terraform Format
        run: terraform fmt -check -diff -recursive
  tfsec:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ github.token }}
  directories: # Job that list subdirectories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.set-dirs.outputs.dir }} # generate output name dir by using inner step output
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
      - name: Get main branch
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/main:refs/remotes/origin/main
      - name: Set Directories
        id: set-dirs # Give it an id to handle to get step outputs in the outputs key above
        run: echo "::set-output name=dir::$(git diff --name-only HEAD origin/main | xargs -L1 dirname | uniq | jq -R -s -c 'split("\n")[:-1]')"
        # Define step output named dir base on ls command transformed to JSON thanks to jq
  tflint:
    runs-on: ubuntu-latest
    needs: [directories] # Depends on previous job
    strategy:
      matrix:
        dir: ${{ fromJson(needs.directories.outputs.dir) }} # List matrix strategy from directories dynamically
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: terraform-linters/setup-tflint@v1
        name: Setup TFLint
        with:
          tflint_version: v0.34.1 
      - name: Copy .tflint.hcl to ${{matrix.dir}}
        if: ${{ !startsWith(matrix.dir, '.') }}
        run: cp ".tfsec/.tflint.hcl" "${{matrix.dir}}/.tflint.hcl"
      - name: Initialize TFLint
        if: ${{ !startsWith(matrix.dir, '.') }}
        working-directory: ${{matrix.dir}}
        run: tflint --init
      - name: Run TFLint
        if: ${{ !startsWith(matrix.dir, '.') }}
        working-directory: ${{matrix.dir}}
        run: tflint -f compact
